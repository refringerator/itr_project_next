name: Playwright Tests
on:
  push:
    branches: [dev]
  pull_request:
    branches-ignore: [gh-pages]

permissions:
  contents: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    env:
      CI: "true"
      POSTGRES_PRISMA_URL: "postgresql://postgres:postgres@127.0.0.1:54322/postgres"
      POSTGRES_URL_NON_POOLING: "postgresql://postgres:postgres@127.0.0.1:54322/postgres"
      NEXT_PUBLIC_SUPABASE_URL: "http://127.0.0.1:54321"
      SUPABASE_SERVICE_ROLE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU"
      NEXT_PUBLIC_SITE_URL: "http://localhost:3000"
      NEXT_PUBLIC_SUPABASE_ANON_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0"
      SUPABASE_AUTH_GITHUB_CLIENT_ID: yndefined
      SUPABASE_AUTH_GITHUB_SECRET: yndefined
      SUPABASE_AUTH_GOOGLE_CLIENT_ID: yndefined
      SUPABASE_AUTH_GOOGLE_SECRET: yndefined
      STORAGE_HOST: "127.0.0.1"
      STORAGE_PORT: "54321"
      NEXT_PUBLIC_JIRA_URL: ""
      JIRA_AUTH_HEADER: ""
      JIRA_SERVICEDESK_ID: ""

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - run: supabase start

      # - uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.npm
      #       ${{ github.workspace }}/.next/cache
      #     # Generate a new cache whenever packages or source files change.
      #     key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
      #     # If source files changed but packages didn't, rebuild from a prior cache.
      #     restore-keys: |
      #       ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Run server
        run: npm run build

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  publish_report:
    name: Publish HTML Report
    # using always() is not ideal here, because it would also run if the workflow was cancelled
    if: "success() || needs.test.result == 'failure'"
    needs: [test]
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      REPORT_PATH: ${{needs.job1.outputs.output1}}
      HTML_REPORT_URL_PATH: reports/${{ github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"

      - name: Checkout GitHub Pages Branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Set Git User
        # see: https://github.com/actions/checkout/issues/13#issuecomment-724415212
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Download zipped HTML report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: ${{ env.REPORT_PATH }}
      - name: Push HTML Report
        timeout-minutes: 3
        # commit report, then try push-rebase-loop until it's able to merge the HTML report to the gh-pages branch
        # this is necessary when this job is running at least twice at the same time (e.g. through two pushes at the same time)
        run: |
          git add .
          git commit -m "workflow: add HTML report for run-id ${{ github.run_id }} (attempt:  ${{ github.run_attempt }})"

          while true; do
            git pull --rebase
            if [ $? -ne 0 ]; then
              echo "Failed to rebase. Please review manually."
              exit 1
            fi

            git push
            if [ $? -eq 0 ]; then
              echo "Successfully pushed HTML report to repo."
              exit 0
            fi
          done
      - name: Output Report URL as Worfklow Annotation
        run: |
          FULL_HTML_REPORT_URL=https://refringerator.github.io/itr_project_next/$HTML_REPORT_URL_PATH

          echo "::notice title=ðŸ“‹ Published Playwright Test Report::$FULL_HTML_REPORT_URL"
